name: Deployment

# concurrency:
#   group: ${{ github.workflow }}-${{ github.ref }}
#   cancel-in-progress: false

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Debug env
        run: |
          env | sort

      - name: Setup env
        run: |
          echo "DEBUG"

      - name: Create release ticket
        run: |
          echo "Create release ticket"
          echo "Share ticket number to deployment jobs below"

      - name: Test DEPLOY - checkout
        uses: actions/checkout@v4
        with:
          repository: mkerrinrapid/testgitops
          ref: test-cluster
          path: testgitops
          token: ${{ github.token }}

      - name: Test UPDATE
        run: |
          set -x
          cd testgitops
          cat testservice.yml | sed 's,image/image:.*,image/image:v2,g' > testservice.yml
          cat testservice.yml
          git config user.name "Test Deploy"
          git config user.email "michael.kerrin@rapidratings.com"
          git add testservice.yml
          git commit -m "Test deploy"
          git push origin test-cluster
          

  deploy-staging-migration:
    runs-on: ubuntu-latest
    concurrency:
      group: staging
    needs: create-release
    environment: staging
    steps:
      - uses: actions/checkout@v4

      - name: Deploy migration ENV
        run: |
          env | sort

  deploy-staging:
    runs-on: ubuntu-latest
    concurrency:
      group: staging
    needs: deploy-staging-migration
    environment: staging
    outputs:
      complete: ${{ steps.set-result.upgraded }}
    steps:
      - uses: actions/checkout@v4

      - name: Files
        run: |
          ls -lR

      - name: Deploy ENV
        run: |
          env | sort

      - name: Deploy PR
        run: |
          git rev-parse HEAD
          git status

      - name: Deploy to staging
        run: |
          echo "DEPLOYING TO STAGING"

      - id: version
        name: Get the next tag version
        uses: reecetech/version-increment@2024.10.1
        with:
          scheme: calver

      - name: Info
        run: |
          echo "$GITHUB_ACTOR"
          echo "$GITHUB_ACTOR_ID"
          echo "$GITHUB_TRIGGERING_ACTOR"
          echo "${{ steps.version.outputs.v-version }}"

      - id: set-result
        name: Output stage as upgraded
        run: |
          echo "upgraded=true" >> $GITHUB_OUTPUT

  deploy-staging-failed:
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: failure()
    steps:
      - name: Failed release
        run: |
          echo "FAILED"

      - name: Debug ENV
        run: |
          env | sort
          
  deploy-production:
    runs-on: ubuntu-latest
    concurrency:
      group: production
    needs: deploy-staging
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Files
        run: |
          ls -lR

      - name: Deploy ENV
        run: |
          env | sort

      - name: Deploy PR
        run: |
          git rev-parse HEAD
          git status

      - name: Deploy to production
        run: |
          echo "DEPLOYING TO PRODUCTION"

  deploy-production-failed:
    runs-on: ubuntu-latest
    needs: deploy-production
    if: failure()
    steps:
      - name: Failed production release
        run: |
          echo "FAILED"

      - name: Debug ENV
        run: |
          env | sort
