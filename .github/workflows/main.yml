name: Deployment

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Debug env
        run: |
          env | sort

      - name: Setup env
        run: |
          echo "DEBUG"

      - name: Create release ticket
        run: |
          echo "Create release ticket"
          echo "Share ticket number to deployment jobs below"

  deployment-staging:
    runs-on: ubuntu-latest
    needs: create-release
    environment: staging
    outputs:
      complete: ${{ steps.set-result.upgraded }}
    steps:
      - uses: actions/checkout@v4

      - name: Files
        run: |
          ls -lR

      - name: Deploy ENV
        run: |
          env | sort

      - name: Deploy PR
        run: |
          git rev-parse HEAD
          git status

      - name: Deploy to staging
        run: |
          echo "DEPLOYING TO STAGING"

      - id: version
        name: Get the next tag version
        uses: reecetech/version-increment@2024.10.1
        with:
          scheme: calver

      - name: Info
        run: |
          echo "$GITHUB_ACTOR"
          echo "$GITHUB_ACTOR_ID"
          echo "$GITHUB_TRIGGERING_ACTOR"
          echo "${{ steps.version.outputs.v-version }}"

      - id: set-result
        name: Output stage as upgraded
        run: |
          echo "upgraded=true" >> $GITHUB_OUTPUT

  deployment-staging-failed:
    runs-on: ubuntu-latest
    needs: deployment-staging
    if: failure()
    steps:
      - name: Failed release
        run: |
          echo "FAILED"

      - name: Debug ENV
        run: |
          env | sort
          
  deployment-production:
    runs-on: ubuntu-latest
    needs: deployment-staging
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Files
        run: |
          ls -lR

      - name: Deploy ENV
        run: |
          env | sort

      - name: Deploy PR
        run: |
          git rev-parse HEAD
          git status

      - name: Deploy to production
        run: |
          echo "DEPLOYING TO PRODUCTION"
